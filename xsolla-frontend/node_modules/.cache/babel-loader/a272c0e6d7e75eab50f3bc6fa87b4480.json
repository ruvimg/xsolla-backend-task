{"ast":null,"code":"import { CREATE_PRODUCT, RETRIEVE_PRODUCTS, UPDATE_PRODUCT, DELETE_PRODUCT, DELETE_ALL_PRODUCTS } from \"./types\";\nimport ProductDataService from \"../services/product.service\";\nexport const createProduct = (SKU, name, type, cost) => async dispatch => {\n  try {\n    const res = await ProductDataService.create({\n      SKU,\n      name,\n      type,\n      cost\n    });\n    dispatch({\n      type: CREATE_PRODUCT,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveProducts = () => async dispatch => {\n  try {\n    const res = await ProductDataService.getAll();\n    dispatch({\n      type: RETRIEVE_PRODUCTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateProduct = (id, data) => async dispatch => {\n  try {\n    const res = await ProductDataService.update(id, data);\n    dispatch({\n      type: UPDATE_PRODUCT,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteProduct = id => async dispatch => {\n  try {\n    await ProductDataService.delete(id);\n    dispatch({\n      type: DELETE_PRODUCT,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteAllProducts = () => async dispatch => {\n  try {\n    const res = await ProductDataService.deleteAll();\n    dispatch({\n      type: DELETE_ALL_PRODUCTS,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const findProductsByName = name => async dispatch => {\n  try {\n    const res = await ProductDataService.findByName(name);\n    dispatch({\n      type: RETRIEVE_PRODUCTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/ruvim/Documents/projects/xsolla/react-crud/src/actions/products.js"],"names":["CREATE_PRODUCT","RETRIEVE_PRODUCTS","UPDATE_PRODUCT","DELETE_PRODUCT","DELETE_ALL_PRODUCTS","ProductDataService","createProduct","SKU","name","type","cost","dispatch","res","create","payload","data","Promise","resolve","err","reject","retrieveProducts","getAll","console","log","updateProduct","id","update","deleteProduct","delete","deleteAllProducts","deleteAll","findProductsByName","findByName"],"mappings":"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","sourcesContent":["import {\n    CREATE_PRODUCT,\n    RETRIEVE_PRODUCTS,\n    UPDATE_PRODUCT,\n    DELETE_PRODUCT,\n    DELETE_ALL_PRODUCTS\n} from \"./types\";\n\nimport ProductDataService from \"../services/product.service\";\n\nexport const createProduct = (SKU, name, type, cost) => async (dispatch) => {\n    try {\n        const res = await ProductDataService.create({ SKU, name, type, cost });\n\n        dispatch({\n            type: CREATE_PRODUCT,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const retrieveProducts = () => async (dispatch) => {\n    try {\n        const res = await ProductDataService.getAll();\n\n        dispatch({\n            type: RETRIEVE_PRODUCTS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const updateProduct = (id, data) => async (dispatch) => {\n    try {\n        const res = await ProductDataService.update(id, data);\n\n        dispatch({\n            type: UPDATE_PRODUCT,\n            payload: data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n        await ProductDataService.delete(id);\n\n        dispatch({\n            type: DELETE_PRODUCT,\n            payload: { id },\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteAllProducts = () => async (dispatch) => {\n    try {\n        const res = await ProductDataService.deleteAll();\n\n        dispatch({\n            type: DELETE_ALL_PRODUCTS,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const findProductsByName = (name) => async (dispatch) => {\n    try {\n        const res = await ProductDataService.findByName(name);\n\n        dispatch({\n            type: RETRIEVE_PRODUCTS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};"]},"metadata":{},"sourceType":"module"}