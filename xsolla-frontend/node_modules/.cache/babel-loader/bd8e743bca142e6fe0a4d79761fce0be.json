{"ast":null,"code":"var _jsxFileName = \"/Users/ruvim/Documents/projects/xsolla/react-crud/src/components/tutorial.component.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTutorial, deleteTutorial } from \"../actions/tutorials\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n    this.removeTutorial = this.removeTutorial.bind(this);\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: { ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentTutorial: { ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id).then(response => {\n      this.setState({\n        currentTutorial: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateStatus(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n    this.props.updateTutorial(this.state.currentTutorial.id, data).then(reponse => {\n      console.log(reponse);\n      this.setState(prevState => ({\n        currentTutorial: { ...prevState.currentTutorial,\n          published: status\n        }\n      }));\n      this.setState({\n        message: \"The status was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateContent() {\n    this.props.updateTutorial(this.state.currentTutorial.id, this.state.currentTutorial).then(reponse => {\n      console.log(reponse);\n      this.setState({\n        message: \"The tutorial was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  removeTutorial() {\n    this.props.deleteTutorial(this.state.currentTutorial.id).then(() => {\n      this.props.history.push(\"/tutorials\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentTutorial\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentTutorial ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Tutorial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"title\",\n              value: currentTutorial.title,\n              onChange: this.onChangeTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"description\",\n              value: currentTutorial.description,\n              onChange: this.onChangeDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), currentTutorial.published ? \"Published\" : \"Pending\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), currentTutorial.published ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-primary mr-2\",\n          onClick: () => this.updateStatus(false),\n          children: \"UnPublish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-primary mr-2\",\n          onClick: () => this.updateStatus(true),\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-danger mr-2\",\n          onClick: this.removeTutorial,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"badge badge-success\",\n          onClick: this.updateContent,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please click on a Tutorial...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(null, {\n  updateTutorial,\n  deleteTutorial\n})(Tutorial);","map":{"version":3,"sources":["/Users/ruvim/Documents/projects/xsolla/react-crud/src/components/tutorial.component.js"],"names":["React","Component","connect","updateTutorial","deleteTutorial","TutorialDataService","Tutorial","constructor","props","onChangeTitle","bind","onChangeDescription","getTutorial","updateStatus","updateContent","removeTutorial","state","currentTutorial","id","title","description","published","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","status","reponse","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTutorial, deleteTutorial } from \"../actions/tutorials\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nclass Tutorial extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.getTutorial = this.getTutorial.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n        this.updateContent = this.updateContent.bind(this);\n        this.removeTutorial = this.removeTutorial.bind(this);\n\n        this.state = {\n            currentTutorial: {\n                id: null,\n                title: \"\",\n                description: \"\",\n                published: false,\n            },\n            message: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.getTutorial(this.props.match.params.id);\n    }\n\n    onChangeTitle(e) {\n        const title = e.target.value;\n\n        this.setState(function (prevState) {\n            return {\n                currentTutorial: {\n                    ...prevState.currentTutorial,\n                    title: title,\n                },\n            };\n        });\n    }\n\n    onChangeDescription(e) {\n        const description = e.target.value;\n\n        this.setState((prevState) => ({\n            currentTutorial: {\n                ...prevState.currentTutorial,\n                description: description,\n            },\n        }));\n    }\n\n    getTutorial(id) {\n        TutorialDataService.get(id)\n            .then((response) => {\n                this.setState({\n                    currentTutorial: response.data,\n                });\n                console.log(response.data);\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    updateStatus(status) {\n        var data = {\n            id: this.state.currentTutorial.id,\n            title: this.state.currentTutorial.title,\n            description: this.state.currentTutorial.description,\n            published: status,\n        };\n\n        this.props\n            .updateTutorial(this.state.currentTutorial.id, data)\n            .then((reponse) => {\n                console.log(reponse);\n\n                this.setState((prevState) => ({\n                    currentTutorial: {\n                        ...prevState.currentTutorial,\n                        published: status,\n                    },\n                }));\n\n                this.setState({ message: \"The status was updated successfully!\" });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    updateContent() {\n        this.props\n            .updateTutorial(this.state.currentTutorial.id, this.state.currentTutorial)\n            .then((reponse) => {\n                console.log(reponse);\n\n                this.setState({ message: \"The tutorial was updated successfully!\" });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    removeTutorial() {\n        this.props\n            .deleteTutorial(this.state.currentTutorial.id)\n            .then(() => {\n                this.props.history.push(\"/tutorials\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentTutorial } = this.state;\n\n        return (\n            <div>\n                {currentTutorial ? (\n                    <div className=\"edit-form\">\n                        <h4>Tutorial</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"title\">Title</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"title\"\n                                    value={currentTutorial.title}\n                                    onChange={this.onChangeTitle}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Description</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentTutorial.description}\n                                    onChange={this.onChangeDescription}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>\n                                    <strong>Status:</strong>\n                                </label>\n                                {currentTutorial.published ? \"Published\" : \"Pending\"}\n                            </div>\n                        </form>\n\n                        {currentTutorial.published ? (\n                            <button\n                                className=\"badge badge-primary mr-2\"\n                                onClick={() => this.updateStatus(false)}\n                            >\n                                UnPublish\n                            </button>\n                        ) : (\n                            <button\n                                className=\"badge badge-primary mr-2\"\n                                onClick={() => this.updateStatus(true)}\n                            >\n                                Publish\n                            </button>\n                        )}\n\n                        <button\n                            className=\"badge badge-danger mr-2\"\n                            onClick={this.removeTutorial}\n                        >\n                            Delete\n                        </button>\n\n                        <button\n                            type=\"submit\"\n                            className=\"badge badge-success\"\n                            onClick={this.updateContent}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a Tutorial...</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect(null, { updateTutorial, deleteTutorial })(Tutorial);"]},"metadata":{},"sourceType":"module"}