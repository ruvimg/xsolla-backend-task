{"ast":null,"code":"import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/tutorials\");\n  }\n\n  get(id) {\n    return http.get(`/tutorials/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/tutorials\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/tutorials/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/tutorials/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tutorials`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/tutorials?title=${title}`);\n  }\n\n}\n\nexport default new TutorialDataService();","map":{"version":3,"sources":["/Users/ruvim/Documents/projects/xsolla/react-crud/src/services/tutorial.service.js"],"names":["http","TutorialDataService","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByTitle","title"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,mBAAN,CAA0B;AACtBC,EAAAA,MAAM,GAAG;AACL,WAAOF,IAAI,CAACG,GAAL,CAAS,YAAT,CAAP;AACH;;AAEDA,EAAAA,GAAG,CAACC,EAAD,EAAK;AACJ,WAAOJ,IAAI,CAACG,GAAL,CAAU,cAAaC,EAAG,EAA1B,CAAP;AACH;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAON,IAAI,CAACO,IAAL,CAAU,YAAV,EAAwBD,IAAxB,CAAP;AACH;;AAEDE,EAAAA,MAAM,CAACJ,EAAD,EAAKE,IAAL,EAAW;AACb,WAAON,IAAI,CAACS,GAAL,CAAU,cAAaL,EAAG,EAA1B,EAA6BE,IAA7B,CAAP;AACH;;AAEDI,EAAAA,MAAM,CAACN,EAAD,EAAK;AACP,WAAOJ,IAAI,CAACU,MAAL,CAAa,cAAaN,EAAG,EAA7B,CAAP;AACH;;AAEDO,EAAAA,SAAS,GAAG;AACR,WAAOX,IAAI,CAACU,MAAL,CAAa,YAAb,CAAP;AACH;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,WAAOb,IAAI,CAACG,GAAL,CAAU,oBAAmBU,KAAM,EAAnC,CAAP;AACH;;AA3BqB;;AA8B1B,eAAe,IAAIZ,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass TutorialDataService {\n    getAll() {\n        return http.get(\"/tutorials\");\n    }\n\n    get(id) {\n        return http.get(`/tutorials/${id}`);\n    }\n\n    create(data) {\n        return http.post(\"/tutorials\", data);\n    }\n\n    update(id, data) {\n        return http.put(`/tutorials/${id}`, data);\n    }\n\n    delete(id) {\n        return http.delete(`/tutorials/${id}`);\n    }\n\n    deleteAll() {\n        return http.delete(`/tutorials`);\n    }\n\n    findByTitle(title) {\n        return http.get(`/tutorials?title=${title}`);\n    }\n}\n\nexport default new TutorialDataService();"]},"metadata":{},"sourceType":"module"}