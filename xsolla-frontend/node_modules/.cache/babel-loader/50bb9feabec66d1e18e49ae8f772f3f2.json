{"ast":null,"code":"import http from \"../http-common\";\n\nclass ProductsDataService {\n  getAll() {\n    return http.get(\"/products\");\n  }\n\n  get(id) {\n    return http.get(`/products/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/products\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/products/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/products/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/products`);\n  }\n\n  findByName(title) {\n    return http.get(`/products?name=${title}`);\n  }\n\n}\n\nexport default new ProductsDataService();","map":{"version":3,"sources":["/Users/ruvim/Documents/projects/xsolla/react-crud/src/services/product.service.js"],"names":["http","ProductsDataService","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByName","title"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,mBAAN,CAA0B;AACtBC,EAAAA,MAAM,GAAG;AACL,WAAOF,IAAI,CAACG,GAAL,CAAS,WAAT,CAAP;AACH;;AAEDA,EAAAA,GAAG,CAACC,EAAD,EAAK;AACJ,WAAOJ,IAAI,CAACG,GAAL,CAAU,aAAYC,EAAG,EAAzB,CAAP;AACH;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAON,IAAI,CAACO,IAAL,CAAU,WAAV,EAAuBD,IAAvB,CAAP;AACH;;AAEDE,EAAAA,MAAM,CAACJ,EAAD,EAAKE,IAAL,EAAW;AACb,WAAON,IAAI,CAACS,GAAL,CAAU,aAAYL,EAAG,EAAzB,EAA4BE,IAA5B,CAAP;AACH;;AAEDI,EAAAA,MAAM,CAACN,EAAD,EAAK;AACP,WAAOJ,IAAI,CAACU,MAAL,CAAa,aAAYN,EAAG,EAA5B,CAAP;AACH;;AAEDO,EAAAA,SAAS,GAAG;AACR,WAAOX,IAAI,CAACU,MAAL,CAAa,WAAb,CAAP;AACH;;AAEDE,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,WAAOb,IAAI,CAACG,GAAL,CAAU,kBAAiBU,KAAM,EAAjC,CAAP;AACH;;AA3BqB;;AA8B1B,eAAe,IAAIZ,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass ProductsDataService {\n    getAll() {\n        return http.get(\"/products\");\n    }\n\n    get(id) {\n        return http.get(`/products/${id}`);\n    }\n\n    create(data) {\n        return http.post(\"/products\", data);\n    }\n\n    update(id, data) {\n        return http.put(`/products/${id}`, data);\n    }\n\n    delete(id) {\n        return http.delete(`/products/${id}`);\n    }\n\n    deleteAll() {\n        return http.delete(`/products`);\n    }\n\n    findByName(title) {\n        return http.get(`/products?name=${title}`);\n    }\n}\n\nexport default new ProductsDataService();"]},"metadata":{},"sourceType":"module"}