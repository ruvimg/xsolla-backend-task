{"ast":null,"code":"import { CREATE_TUTORIAL, RETRIEVE_TUTORIALS, UPDATE_TUTORIAL, DELETE_TUTORIAL, DELETE_ALL_TUTORIALS } from \"./types\";\nimport TutorialDataService from \"../services/tutorial.service\";\nexport const createTutorial = (title, description) => async dispatch => {\n  try {\n    const res = await TutorialDataService.create({\n      title,\n      description\n    });\n    dispatch({\n      type: CREATE_TUTORIAL,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveTutorials = () => async dispatch => {\n  try {\n    const res = await TutorialDataService.getAll();\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateTutorial = (id, data) => async dispatch => {\n  try {\n    const res = await TutorialDataService.update(id, data);\n    dispatch({\n      type: UPDATE_TUTORIAL,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteTutorial = id => async dispatch => {\n  try {\n    await TutorialDataService.delete(id);\n    dispatch({\n      type: DELETE_TUTORIAL,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteAllTutorials = () => async dispatch => {\n  try {\n    const res = await TutorialDataService.deleteAll();\n    dispatch({\n      type: DELETE_ALL_TUTORIALS,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const findTutorialsByTitle = title => async dispatch => {\n  try {\n    const res = await TutorialDataService.findByTitle(title);\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/ruvim/Documents/projects/xsolla/react-crud/src/actions/tutorials.js"],"names":["CREATE_TUTORIAL","RETRIEVE_TUTORIALS","UPDATE_TUTORIAL","DELETE_TUTORIAL","DELETE_ALL_TUTORIALS","TutorialDataService","createTutorial","title","description","dispatch","res","create","type","payload","data","Promise","resolve","err","reject","retrieveTutorials","getAll","console","log","updateTutorial","id","update","deleteTutorial","delete","deleteAllTutorials","deleteAll","findTutorialsByTitle","findByTitle"],"mappings":"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","sourcesContent":["import {\n    CREATE_TUTORIAL,\n    RETRIEVE_TUTORIALS,\n    UPDATE_TUTORIAL,\n    DELETE_TUTORIAL,\n    DELETE_ALL_TUTORIALS\n} from \"./types\";\n\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport const createTutorial = (title, description) => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.create({ title, description });\n\n        dispatch({\n            type: CREATE_TUTORIAL,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const retrieveTutorials = () => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.getAll();\n\n        dispatch({\n            type: RETRIEVE_TUTORIALS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const updateTutorial = (id, data) => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.update(id, data);\n\n        dispatch({\n            type: UPDATE_TUTORIAL,\n            payload: data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const deleteTutorial = (id) => async (dispatch) => {\n    try {\n        await TutorialDataService.delete(id);\n\n        dispatch({\n            type: DELETE_TUTORIAL,\n            payload: { id },\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteAllTutorials = () => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.deleteAll();\n\n        dispatch({\n            type: DELETE_ALL_TUTORIALS,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const findTutorialsByTitle = (title) => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.findByTitle(title);\n\n        dispatch({\n            type: RETRIEVE_TUTORIALS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};"]},"metadata":{},"sourceType":"module"}